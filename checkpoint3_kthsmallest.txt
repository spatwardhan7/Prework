public class Solution {
	// DO NOT MODIFY THE LIST. IT IS READ ONLY
	public int kthsmallest(final List<Integer> a, int k) {
	    /* Tried submitting this piece just for kicks and it works!
	    Collections.sort(a);
	    return a.get(k-1);
	    */
	    ArrayList<Integer> list = new ArrayList<Integer>(a);
	    return getKth(list, 0, a.size()-1, k);
	}
	
	private int getKth(List<Integer> list, int start, int end, int k) {
	    int pos = start;
	    int pivot = list.get(end);
	    
         for (int i = start; i <= end - 1; i++) {
            if (list.get(i) < pivot) {
                 int temp = list.get(pos);
                 list.set(pos, list.get(i));
                 list.set(i, temp);
                 pos++;
             } else if (list.get(i) == pivot) {} 
         }
    
        int temp = list.get(pos);
        list.set(pos, list.get(end));
        list.set(end, temp);
        
        if(pos-start == k-1){
            return list.get(pos);
        } else if(pos-start > k-1) {
            return getKth(list, start, pos-1, k);
        } else {
            return getKth(list, pos+1, end, k-1-(pos-start));
        }
    }	
}
